services:

  create-paste-service:
    build:
      context: ./create-paste-service-go
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=password
      - DB_NAME=pastebin
      - PORT=8081
    depends_on:
      mysql:
        condition: service_healthy

  get-paste-service:
    build:
      context: ./get-paste-service-go
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=password
      - DB_NAME=pastebin
      - PORT=8082
    depends_on:
      mysql:
        condition: service_healthy

  get-stats-service:
    build:
      context: ./get-stats-service-go
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=password
      - DB_NAME=pastebin
      - PORT=8083
    depends_on:
      mysql:
        condition: service_healthy

  cleanup-expired-service:
    build:
      context: ./cleanup-expired-service-go
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASS=password
      - DB_NAME=pastebin
      - CLEANUP_INTERVAL_MINS=0.25
      - PORT=8084
    depends_on:
      mysql:
        condition: service_healthy

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - create-paste-service
      - get-paste-service
      - get-stats-service
      - cleanup-expired-service
    restart: unless-stopped

  locust:
    build:
      context: ./locust
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    depends_on:
      - nginx
    networks:
      - default
    command: locust -f locustfile.py

  mysql:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: pastebin
    volumes:
      - mysql_data:/var/lib/mysql
      - ./pastebin_db.sql:/docker-entrypoint-initdb.d/pastebin_db.sql
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-ppassword" ]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  mysql_data:
